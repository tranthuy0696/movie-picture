name: Backend Continuous Integration

on:
  # trigger event
  # workflow_dispatch: trigger event manually from github action
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - "started/backend/**"

env:
  PYTHON_VERSION: 3.11
  WORKING_DIR: "./started/backend"

jobs:
  lint:
    name: Run eslint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pipenv
          key: pipenv-${{ runner.os }}-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            pipenv-${{ runner.os }}-

      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install

      - name: Run eslint
        run: pip run lint

  test:
    name: Run test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          working-directory: ${{ env.WORKING_DIR }}
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pipenv
          key: pipenv-${{ runner.os }}-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            pipenv-${{ runner.os }}-

      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install

      - name: Run test
        run: pipenv run test

  build:
    name: Build application
    runs-on: ubuntu-latest
    needs: [lint, test]
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          working-directory: ${{ env.WORKING_DIR }}
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pipenv
          key: pipenv-${{ runner.os }}-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            pipenv-${{ runner.os }}-

      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install

      - name: Run test
        run: pipenv run test
